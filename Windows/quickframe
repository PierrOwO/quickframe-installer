#!/usr/bin/env php
<?php
// QuickFrame CLI - Windows only version

if ($argc < 3 || $argv[1] !== 'new') {
    echo "Usage:\n";
    echo "  quickframe new <project-name>\n";
    exit(1);
}

$projectName = $argv[2];

$drive = getenv('SystemDrive') ?: 'C:';

$baseDir = $drive . DIRECTORY_SEPARATOR . 'QuickFrame';
if (!is_dir($baseDir)) {
    mkdir($baseDir, 0755, true);
}

$targetPath = $baseDir . DIRECTORY_SEPARATOR . $projectName;

if (file_exists($targetPath)) {
    echo "Error: Folder '$projectName' already exists in $baseDir.\n";
    exit(1);
}

$templateRepo = 'https://github.com/PierrOwO/QuickFrame.git';

echo "Downloading data...\n";

$tmpDir = sys_get_temp_dir() . DIRECTORY_SEPARATOR . 'qf_' . uniqid();

$escapedRepo = escapeshellarg($templateRepo);
$escapedTmpDir = escapeshellarg($tmpDir);

exec("git clone $escapedRepo $escapedTmpDir 2>&1", $output, $code);

if ($code !== 0) {
    echo "Error: Failed to download data.\n";
    echo implode("\n", $output) . "\n";
    exit(1);
}
echo "Data downloaded, copying to '$targetPath'... \n";

function copyFolder(string $src, string $dst): void {
    if (!is_dir($dst)) {
        mkdir($dst, 0755, true);
    }
    $files = scandir($src);
    foreach ($files as $file) {
        if ($file === '.' || $file === '..') continue;
        $srcPath = $src . DIRECTORY_SEPARATOR . $file;
        $dstPath = $dst . DIRECTORY_SEPARATOR . $file;
        if (is_dir($srcPath)) {
            copyFolder($srcPath, $dstPath);
        } else {
            copy($srcPath, $dstPath);
        }
    }
}

copyFolder($tmpDir, $targetPath);

$gitDir = $targetPath . DIRECTORY_SEPARATOR . '.git';
if (is_dir($gitDir)) {
    exec('rmdir /s /q ' . escapeshellarg($gitDir));
}

$gitignorePath = $targetPath . DIRECTORY_SEPARATOR . '.gitignore';
if (!file_exists($gitignorePath)) {
    file_put_contents($gitignorePath, "node_modules/\n");
}

echo "Initializing GIT...\n";

chdir($targetPath);
exec('git init');

echo "Installing npm dependencies...\n";
exec('npm install 2>&1', $npmOutput, $npmCode);
if ($npmCode !== 0) {
    echo "Warning: npm install failed.\n";
    echo implode("\n", $npmOutput) . "\n";
} else {
    echo "npm dependencies installed successfully.\n";
}

if (is_dir($tmpDir)) {
    exec('rmdir /s /q ' . escapeshellarg($tmpDir));
}

$iterator = new RecursiveIteratorIterator(
    new RecursiveDirectoryIterator($targetPath, RecursiveDirectoryIterator::SKIP_DOTS)
);

foreach ($iterator as $file) {
    $filename = $file->getFilename();
    if ($filename === 'quickframe' || pathinfo($filename, PATHINFO_EXTENSION) === 'sh') {
        @chmod($file->getPathname(), 0755);
    }
}

echo "Setting up ENV...\n";
$envExample = $targetPath . DIRECTORY_SEPARATOR . '.env.example';
$env = $targetPath . DIRECTORY_SEPARATOR . '.env';

if (file_exists($envExample) && !file_exists($env)) {
    copy($envExample, $env);
}

echo "Project '$projectName' has been created successfully in $baseDir.\n";
echo "Navigate to the directory: cd " . str_replace('/', '\\', $targetPath) . "\n";